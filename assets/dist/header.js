/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./assets/js/header.js":
/*!*****************************!*\
  !*** ./assets/js/header.js ***!
  \*****************************/
/***/ (() => {

eval("(function ($, Drupal) {\n\n  'use strict';\n\n  /**\n   * Handle open mobile menu.\n   */\n  Drupal.behaviors.mobile_menu_toggle = {\n    attach: function (context) {\n      const header = $('.ws-header', context);\n      const body = $('body', context);\n      const btn = $(this, context);\n      const submenu = $('.header-nav__submenu', context);\n      const userMenu = $('.block-system-menu-blockaccount', context);\n      const headerNavToggle = $('.header-navbar-toggler', context);\n      headerNavToggle.unbind('click');\n      headerNavToggle.click(function () {\n        if (header.hasClass('open')) {\n          header.removeClass('open');\n          btn.attr('aria-expanded', false);\n          body.css('overflow', 'auto');\n          submenu.removeClass('open');\n          userMenu.removeClass('container');\n          $('.header--bottom').css('position', 'relative');\n          header.css('overflow-y', 'revert');\n          $('a.highlighted').show();\n        } else {\n          header.addClass('open');\n          userMenu.addClass('container');\n          btn.attr('aria-expanded', true);\n          body.css('overflow', 'hidden');\n          $('.header--bottom').css('position', 'absolute');\n          header.css('overflow-y', 'auto');\n        }\n      });\n\n      switchMainMenuType();\n\n      $(window).resize(function () {\n        if (header.hasClass('desktop')) {\n          header.removeClass('open');\n          btn.attr('aria-expanded', false);\n          body.css('overflow', 'auto');\n        }\n        switchMainMenuType();\n      });\n      // A fix for a small mobile screen.\n      header.scroll(() => {\n        if (header.scrollTop() > 0) {\n          header.addClass('scrolled');\n        } else {\n          header.removeClass('scrolled');\n        }\n      });\n\n      // Hide main menu items until page is ready.\n      header.find('nav').css('visibility', 'visible');\n      header.find('.block-ws-search-bar').css('visibility', 'visible');\n      header.find('.block-ws-site-logo').css('visibility', 'visible');\n\n      function switchMainMenuType() {\n        const header = $('.ws-header');\n        // This size is can be fixed.\n        const logo =  230;\n        var main_menu = document.querySelector('.ws-main-menu-wrapper');\n        var right_menu = document.querySelector('.header--bottom-right-column');\n        var max_available_width = $(window).width() - logo - right_menu.offsetWidth;\n\n        if (max_available_width < main_menu.offsetWidth) {\n          if (header.hasClass('desktop')) {\n           header.removeClass('desktop');\n          }\n          header.addClass('mobile');\n        }\n        else {\n          if (header.hasClass('mobile')) {\n            header.removeClass('mobile');\n          }\n          header.addClass('desktop');\n        }\n      }\n    }\n  };\n\n  /**\n   * Handle dropdown for the 2nd level of the menu.\n   */\n  Drupal.behaviors.header_dropdown_menu = {\n    attach: function (context) {\n      const header = $('.ws-header', context);\n\n      $('.dropdown-submenu .menu-link-item').click(function (e) {\n        // If the item is already open, then go to the link.\n        let parentLink = $(this).parent();\n        if (this.href !== undefined && parentLink.hasClass('active') ) {\n          window.location.href = this.href;\n        }\n        // If the item is not open and it is a parent, then open it.\n        else if (parentLink.hasClass('children')) {\n          e.stopPropagation();\n          e.preventDefault();\n        }\n        const subMenuTarget = $(this).attr('data-submenu-target');\n        const subMenu = $('#' + subMenuTarget);\n\n        // Manage states of 3rd level popups.\n        const secondLevelDropdownLink = $('.header-nav__submenu.level-3');\n        secondLevelDropdownLink.each(function () {\n          $(this).removeClass('open');\n          if ($(this).attr('id') !== subMenuTarget) {\n            $(this).removeClass('active');\n          }\n        });\n\n        // Set active 2nd level item and remove the state from siblings.\n        $(this).parent().addClass('active').siblings().removeClass('active');\n        if (header.hasClass('mobile')) {\n          $(this).parent().parent().toggleClass('open');\n          $(this).parent().parent().parent().toggleClass('open');\n        }\n        subMenu.addClass('open');\n        // When we enter the 3rd level, move focus to it. Tabindex is required to be focusable by js.\n        subMenu.attr('tabIndex', '-1').focus();\n      });\n\n      const firstLevelItem = $('.header-nav__links .dropdown', context);\n      const firstLevelItemLink = $(firstLevelItem, context).children('a');\n      $(firstLevelItemLink, context).click(function (e) {\n        if (header.hasClass('mobile')) {\n          if ($(this).parent().hasClass('children')) {\n            e.preventDefault();\n          }\n\n          const subMenu = $(this).siblings('.header-nav__submenu');\n          if (subMenu.hasClass('open')) {\n            subMenu.removeClass('open');\n          } else {\n            subMenu.addClass('open');\n            $('a.highlighted').hide();\n          }\n          if (header.hasClass('scrolled')) {\n            $('.header--bottom').css('position', 'fixed');\n          }\n          header.css('overflow-y', 'hidden');\n        }\n        const secondLevelDropdownLink = $(this).parent().find('li.active');\n        secondLevelDropdownLink.each(function () {\n          $(this).removeClass('active');\n        });\n      });\n\n      $('.back', context).click(function () {\n        const back_1_level = $(this, context).parent().parent().parent().parent().parent();\n        if (back_1_level.hasClass('open')) {\n          back_1_level.removeClass('open');\n          $('.header--bottom').css('position', 'absolute');\n          if (header.hasClass('open')) {\n            header.css('overflow-y', 'auto');\n          }\n          $('a.highlighted').show();\n        }\n        if (back_1_level.hasClass('show')) {\n          back_1_level.removeClass('show');\n        }\n        const back_2_level = $(this, context).parent().parent().parent().parent();\n        if (back_2_level.hasClass('open')) {\n          back_2_level.removeClass('open');\n        }\n        if (back_2_level.hasClass('show')) {\n          back_2_level.removeClass('show');\n        }\n      });\n\n      $(window).resize(function () {\n        if (header.hasClass('desktop')) {\n          const headerSubMenu = $('.header-nav__submenu');\n          headerSubMenu.removeClass('open');\n          headerSubMenu.removeClass('show');\n          $('.dropdown').removeClass('show');\n        }\n      });\n      // Set top position for submenus in mobile screen.\n      const mobileHeaderHeight = $('.header--bottom').outerHeight();\n      $('.header-nav__submenu').css('top', mobileHeaderHeight + 'px');\n    }\n  };\n})(jQuery, Drupal);\n\n\n//# sourceURL=webpack://y-lb/./assets/js/header.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./assets/js/header.js"]();
/******/ 	
/******/ })()
;